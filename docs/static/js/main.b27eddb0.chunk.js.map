{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","nombre_que_le_quiero_dar_a_la_variable","imagen","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAiB5C,OACI,sBAAMC,SAZM,SAACC,GAChBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACtCN,EAAc,IACdO,QAAQC,IAAI,kBAMT,SACI,uBAAOC,KAAK,OAAOC,MAAOX,EAC1BY,SAlBa,SAACT,GAErBF,EAAcE,EAAEU,OAAOF,a,+BCPbG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEjBC,EAFiB,iDAE8BC,UAAWH,GAFzC,+DAKKI,MAAOF,GALZ,cAKPG,EALO,gBAOQA,EAAKC,OAPb,uBAONC,EAPM,EAONA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAGzCT,QAAQC,IAAIc,GAlBC,kBAoBPA,GApBO,4CAAH,sDCILO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAExC,OADIT,QAAQC,IAAKiB,EAAIC,EAAOV,GAExB,sBAAKc,UAAU,4DAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EAEXhB,mBACtB,CACIuB,KAAK,GACLa,SAAQ,IALqB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAyBrC,OAhBAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAM,SAAAC,GAGhBhC,QAAQC,IAAI+B,GACZH,EAAS,CACTf,KAAKkB,EACLL,SAAQ,SAKjB,CAACpB,IAGGqB,EDpBqDK,CAAa1B,GAAhE2B,EAH0B,EAG/BpB,KAA6Ca,EAHd,EAGcA,QAajD,OAZH3B,QAAQC,IAAI0B,GAaL,qCACJ,6BAAKpB,IAEHoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACP,qBAAKA,UAAU,YAAf,SACOW,EAAuClB,KAAI,SAAAmB,GAAM,OAC9C,cAAC,EAAD,eAEIA,GADGA,EAAOjB,aESnBkB,EAlCO,WAAI,MAGY7C,mBAAS,CAAC,cAHtB,mBAGjB8C,EAHiB,KAGL/C,EAHK,KAYtB,OACI,qCACA,8CACA,cAAC,EAAD,CAAcA,cAAiBA,IAC/B,uBAEF,6BAEK+C,EAAWrB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEEA,SAAYA,GADPA,Y,MCpBlB+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b27eddb0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n const [inputValue, setinputValue] = useState('')// se utiliza un string vacio para que no lance undefined\r\n const handleInputChange=(e) =>{\r\n     //console.log(e.target.value)\r\n     setinputValue(e.target.value)\r\n }\r\n const handleSubmit=(e) =>{\r\n     e.preventDefault();\r\n\r\n     if( inputValue.trim().length >2){\r\n        setCategories(cats=>[inputValue,...cats])\r\n     setinputValue(\"\")\r\n     console.log(\"SUUUUUUUBMIT\");\r\n\r\n     }\r\n }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue}\r\n            onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n\r\n}\r\n    AddCategory.propTypes ={\r\n        setCategories: PropTypes.func.isRequired,\r\n\r\n\r\n    }","  export const getGifs = async(category)=>{\r\n   \r\n  const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=g0INsNvt7XWmxOzq13UZcwHmCcHsdjLQ`\r\n   \r\n            \r\n            const resp= await fetch (url);\r\n            //const data = await resp.json();\r\n            const {data} = await resp.json();\r\n           \r\n\r\n            const gifs = data.map(img=>{\r\n\r\n                return{\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images.downsized_medium.url\r\n                }\r\n            })\r\n            console.log(gifs) \r\n           // setimages(gifs)\r\n           return gifs;\r\n    }","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\n    // console.log(props)\r\n    export const GifGridItem = ({id, title, url}) => {\r\n        console.log( id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn  animate__delay-2s\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  \r\n const {data:nombre_que_le_quiero_dar_a_la_variable, loading} = useFechGifs( category);\r\n console.log(loading)\r\n //console.log(data)\r\n    // const [images, setimages] = useState([])\r\n    // useEffect(() => { \r\n    //   getGifs(category).then(\r\n    //       imgs=> setimages(imgs)\r\n    //   )   \r\n    // },[category])// --- > poner la dependencia\r\n\r\n   \r\n\r\n    \r\n    return (\r\n        <>\r\n    <h3>{category}</h3>\r\n     {/* {loading?'cargando...' : 'datos cargados' } */}\r\n     {loading && <p className=\"animate__animated animate__flash\">Loading ...</p> }\r\n        { <div className=\"card-grid\"> \r\n               { nombre_que_le_quiero_dar_a_la_variable.map(imagen =>(    \r\n                    <GifGridItem\r\n                    key = {imagen.id}\r\n                    {...imagen}// MANDA las propiedades de imagen independientemente\r\n                    />\r\n           )\r\n           )}\r\n             \r\n           \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\nexport const useFechGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then( imgs=>{\r\n\r\n           \r\n                console.log(imgs)\r\n                setstate({\r\n                data:imgs,\r\n                loading:false\r\n            }); \r\n        }   \r\n        )\r\n\r\n    }, [category])\r\n    \r\n    \r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n const GifExpertApp = ()=>{\r\n\r\n  //  const categories =['one Punch', 'Samurai X' , 'Bola de Dragon']\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n// const handleAdd =(e)=>{\r\n\r\n//   /// setcategories= categories.push(\"Naruto\") ---NO funciona , aÃ±ado a la const\r\n//     // setcategories([...categories, 'Naruto']) --> OK\r\n//     setcategories(cats=>[...cats,'Naruto'])\r\n// }\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory  setCategories = {setCategories}/>\r\n        <hr/>\r\n        \r\n      <ol>\r\n           { \r\n           categories.map(category =>(\r\n           <GifGrid\r\n           key ={ category} \r\n             category= { category }\r\n             \r\n             />\r\n           )\r\n           )\r\n           }\r\n        </ol>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport'./index.css'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}